apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

apply from: 'readprops.gradle'

android {
    compileSdkVersion compile_sdk_version

    defaultConfig {
        applicationId "com.storyous.delivery"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        multiDexEnabled true
        versionCode 11
        versionName "0.0.11"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "API_ROUTER_URL", "\"https://api.$root_url/\""
        buildConfigField "String", "LOGIN_API_URL", "\"https://login.$root_url/api/\""
        buildConfigField "String", "LOGIN_URL", "\"https://login.$root_url/api/auth/authorize?client_id=%1\$s&redirect_uri=%2\$s&response_type=code\""
        buildConfigField "String", "LOGIN_CLIENT_ID", "\"$login_client_id\""
        buildConfigField "String", "LOGIN_REDIRECT_URL", "\"storyous://login\""
        buildConfigField "String", "LOGIN_ORIGIN_HEADER", "\"storyous://login\""
        signingConfig signingConfigs.debug
    }

    signingConfigs {
        release {
            storeFile file('keystore.jks')
            if (System.getenv("KEY_ALIAS") != null) {
                keyAlias System.getenv("KEY_ALIAS")
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyPassword System.getenv("KEY_PASSWORD")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            matchingFallbacks = ['release']
        }
        local {
            initWith debug
            matchingFallbacks = ['debug']
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        abortOnError true
        absolutePaths false
        enable 'StopShip'
        fatal 'StopShip'
    }
}

dependencies {
    releaseApi "com.github.Storyous.android-libraries:delivery:$storyous_libraries_version"
    debugApi "com.github.Storyous.android-libraries:delivery:$storyous_libraries_version"
    localApi project(':delivery')

    releaseApi "com.github.Storyous.android-libraries:common_utils:$storyous_libraries_version"
    debugApi "com.github.Storyous.android-libraries:common_utils:$storyous_libraries_version"
    localApi project(':common_utils')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Tests
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Logging
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    // Storyous design
    implementation project(":design")

    // Retrofit & OkHttp
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Firebase
    implementation "com.google.firebase:firebase-analytics:$firebase_version"
    implementation "com.google.firebase:firebase-crashlytics:$crashlytics_version"

    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-fragment:$koin_version"

    implementation "androidx.multidex:multidex:$multidex_version"

    // DB persistence
    // DEPRECATED delivery module should create his own db
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    implementation 'com.facebook.stetho:stetho:1.5.1'
}
